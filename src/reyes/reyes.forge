
buildfile 'reyes_examples/reyes_examples.forge';
buildfile 'reyes_test/reyes_test.forge';
buildfile 'reyes_virtual_machine/reyes_virtual_machine.forge';

for _, cc in toolsets('^cc_.*') do
    local cc = cc:inherit {
        warning_level = 0;
    };

    cc:all {
        cc:StaticLibrary '${lib}/reyes_${platform}_${architecture}' {
            cc:Cxx '${obj}/%1' {
                'assert.cpp';
                cc:Lalrc 'shader_parser.g.cpp' {
                    'shader_parser.g';
                };
            };

            cc:Cxx '${obj}/%1' {
                'Address.cpp',
                'AddSymbolHelper.cpp',
                'Attributes.cpp',
                'CodeGenerator.cpp',
                'Cone.cpp',
                'CubicPatch.cpp',
                'Cylinder.cpp',        
                'Debugger.cpp',
                'Disk.cpp',
                'Encoder.cpp',
                'ErrorPolicy.cpp',
                'Geometry.cpp',
                'Grid.cpp',
                'Hyperboloid.cpp',
                'ImageBuffer.cpp',
                'Light.cpp',
                'LinearPatch.cpp',
                'Options.cpp',
                'Paraboloid.cpp',
                'Renderer.cpp',
                'Sampler.cpp',
                'SampleBuffer.cpp',
                'Scope.cpp';
                'SemanticAnalyzer.cpp',
                'SetValueHelper.cpp',
                'Shader.cpp',
                'ShaderParser.cpp',
                'Sphere.cpp',
                'Symbol.cpp',
                'SymbolParameter.cpp',
                'SymbolTable.cpp',
                'SyntaxNode.cpp',
                'Texture.cpp',
                'Torus.cpp',
                'VirtualMachine.cpp',
            };    
        }
    };
end
